{"version":3,"sources":["index.css","flickity.min.css","App.scss","variables.scss","components/header.scss","components/banner.scss","components/projects.scss","breakpoints.scss","components/carousel.scss","components/footer.scss","components/overlay.scss"],"names":[],"mappings":"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","file":"main.82f7c305.chunk.css","sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","/*! Flickity v2.2.1\nhttps://flickity.metafizzy.co\n---------------------------------------------- */\n.flickity-enabled{position:relative}.flickity-enabled:focus{outline:0}.flickity-viewport{overflow:hidden;position:relative;height:100%}.flickity-slider{position:absolute;width:100%;height:100%}.flickity-enabled.is-draggable{-webkit-tap-highlight-color:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.flickity-enabled.is-draggable .flickity-viewport{cursor:move;cursor:-webkit-grab;cursor:grab}.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down{cursor:-webkit-grabbing;cursor:grabbing}.flickity-button{position:absolute;background:hsla(0,0%,100%,.75);border:none;color:#333}.flickity-button:hover{background:#fff;cursor:pointer}.flickity-button:focus{outline:0;box-shadow:0 0 0 5px #19f}.flickity-button:active{opacity:.6}.flickity-button:disabled{opacity:.3;cursor:auto;pointer-events:none}.flickity-button-icon{fill:currentColor}.flickity-prev-next-button{top:50%;width:44px;height:44px;border-radius:50%;transform:translateY(-50%)}.flickity-prev-next-button.previous{left:10px}.flickity-prev-next-button.next{right:10px}.flickity-rtl .flickity-prev-next-button.previous{left:auto;right:10px}.flickity-rtl .flickity-prev-next-button.next{right:auto;left:10px}.flickity-prev-next-button .flickity-button-icon{position:absolute;left:20%;top:20%;width:60%;height:60%}.flickity-page-dots{position:absolute;width:100%;bottom:-25px;padding:0;margin:0;list-style:none;text-align:center;line-height:1}.flickity-rtl .flickity-page-dots{direction:rtl}.flickity-page-dots .dot{display:inline-block;width:10px;height:10px;margin:0 8px;background:#333;border-radius:50%;opacity:.25;cursor:pointer}.flickity-page-dots .dot.is-selected{opacity:1}","@import \"./breakpoints.scss\";\n@import \"./flickity.min.css\";\n@import \"https://fonts.googleapis.com/css2?family=Didact+Gothic&display=swap\";\n@import \"./variables.scss\";\n@import \"./components/header.scss\";\n@import \"./components/banner.scss\";\n@import \"./components/projects.scss\";\n@import \"./components/carousel.scss\";\n@import \"./components/footer.scss\";\n@import \"./components/overlay.scss\";\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: \"Didact Gothic\", sans-serif;\n  color: $black;\n  background: $background;\n}\n\n.App {\n  background: $background;\n}\n\n.container {\n  margin: 0 auto 0 auto;\n  width: 85%;\n  max-width: 1300px;\n}\n","$black: #100f0e;\r\n$white: #ffffff;\r\n$gold: #ffab1b;\r\n$background: #fdfaf7;\r\n$background-dark: #272523;\r\n$gray: #bbbab9;\r\n$orange: #fc4b09;\r\n\r\n@keyframes waving {\r\n  0% {\r\n    transform: rotate(0);\r\n  }\r\n  10% {\r\n    transform: rotate(-10deg);\r\n  }\r\n  20% {\r\n    transform: rotate(12deg);\r\n  }\r\n\r\n  30% {\r\n    transform: rotate(-10deg);\r\n  }\r\n  40% {\r\n    transform: rotate(9deg);\r\n  }\r\n  50% {\r\n    transform: rotate(0);\r\n  }\r\n  0% {\r\n    transform: rotate(0);\r\n  }\r\n}\r\n",".header-full {\r\n  width: 100%;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 3;\r\n  background: $background;\r\n  opacity: 0.97;\r\n\r\n  header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 125px;\r\n    transition: height 0.3s;\r\n\r\n    &.scrolling {\r\n      height: 60px;\r\n    }\r\n\r\n    .logo {\r\n      color: $gold;\r\n      font-size: 3rem;\r\n\r\n      img {\r\n      }\r\n    }\r\n\r\n    .header-nav {\r\n      position: relative;\r\n      width: 12rem;\r\n      display: flex;\r\n      justify-content: space-around;\r\n\r\n      i {\r\n        color: $gold;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".banner {\r\n  margin-top: 125px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n\r\n  .bio {\r\n    color: $black;\r\n    font-size: 2rem;\r\n\r\n    .waving-hand {\r\n      display: inline-block;\r\n      animation: waving 2.5s infinite;\r\n      transform-origin: 80% 80%;\r\n    }\r\n  }\r\n\r\n  .about {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n\r\n    a {\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      cursor: pointer;\r\n\r\n      &:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        width: 0;\r\n        height: 2px;\r\n        right: 0;\r\n        top: 100%;\r\n        background: $gold;\r\n        transition: 0.3s ease;\r\n      }\r\n\r\n      &:hover {\r\n        &:after {\r\n          left: 0;\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      p {\r\n        margin: 0;\r\n        display: inline-block;\r\n        color: $gold;\r\n      }\r\n\r\n      .right-arrow {\r\n        color: $gold;\r\n        width: 30px;\r\n        height: 18px;\r\n        display: inline-block;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".projects {\r\n  margin-top: 65px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .title {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    span {\r\n      display: inline-block;\r\n      width: 40px;\r\n      height: 2px;\r\n      background: $black;\r\n    }\r\n\r\n    h2 {\r\n      margin-left: 8px;\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  .project {\r\n    display: flex;\r\n    margin-bottom: 4rem;\r\n    // -webkit-box-shadow: -2px -2px 5px -1px rgba(16, 15, 14, 0.75);\r\n    // -moz-box-shadow: -2px -2px 5px -1px rgba(16, 15, 14, 0.75);\r\n    // box-shadow: -2px -2px 5px -1px rgba(16, 15, 14, 0.75);\r\n\r\n    @include media(\"<=920px\") {\r\n      flex-direction: column;\r\n    }\r\n\r\n    &:hover {\r\n      img {\r\n        transform: scale(1.05);\r\n      }\r\n    }\r\n\r\n    &.demo {\r\n      &:hover {\r\n        img {\r\n          filter: blur(3px);\r\n          filter: grayscale(1);\r\n        }\r\n\r\n        .project-image {\r\n          .demo {\r\n            visibility: visible;\r\n            opacity: 1;\r\n\r\n            a {\r\n              //text-shadow: 2px 2px $black;\r\n              color: $gold;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .project-info {\r\n      width: 35%;\r\n      background: $black;\r\n      padding: 1rem 2rem;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      @include media(\"<=1185px\") {\r\n        width: 40%;\r\n      }\r\n\r\n      @include media(\"<=920px\") {\r\n        width: 100%;\r\n      }\r\n\r\n      .project-title {\r\n        margin-bottom: 18px;\r\n\r\n        h3 {\r\n          color: $white;\r\n          font-size: 2.5rem;\r\n          font-weight: 600;\r\n          margin: 0;\r\n        }\r\n\r\n        a {\r\n          display: inline-block;\r\n          background: $white;\r\n          padding: 5px 11px;\r\n          border-radius: 25px;\r\n          font-size: 0.9rem;\r\n          text-align: center;\r\n          color: $black;\r\n          text-decoration: none;\r\n        }\r\n      }\r\n\r\n      .project-description {\r\n        h4 {\r\n          color: $gray;\r\n          font-size: 1rem;\r\n          font-weight: 300;\r\n        }\r\n      }\r\n    }\r\n\r\n    .project-image {\r\n      position: relative;\r\n      width: 65%;\r\n      overflow: hidden;\r\n\r\n      @include media(\"<=1185px\") {\r\n        width: 60%;\r\n      }\r\n\r\n      @include media(\"<=920px\") {\r\n        width: 100%;\r\n      }\r\n\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n        transition: transform 0.7s ease-out;\r\n      }\r\n\r\n      .demo {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        transition: visibility 0s, opacity 0.6s linear;\r\n\r\n        a {\r\n          text-decoration: none;\r\n          color: $white;\r\n          font-size: 1.5rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","$breakpoints: (\r\n  \"phone\": 425px,\r\n  \"tablet\": 768px,\r\n  \"desktop\": 1366px,\r\n  \"LGdesktop\": 1920px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"retina2x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 2)\",\r\n    \"(min-resolution: 192dpi)\"\r\n  ),\r\n  \"retina3x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 3)\",\r\n    \"(min-resolution: 350dpi)\"\r\n  )\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n  @for $i from 1 through length($conditions) {\r\n    $conditions: set-nth(\r\n      $conditions,\r\n      $i,\r\n      parse-expression(nth($conditions, $i))\r\n    );\r\n  }\r\n\r\n  $branches: get-query-branches($conditions);\r\n  $query: \"\";\r\n\r\n  @each $branch in $branches {\r\n    @if (str-length($query) != 0) {\r\n      $query: $query + \", \";\r\n    }\r\n\r\n    $query: $query + $branch;\r\n  }\r\n\r\n  @media #{$query} {\r\n    @content;\r\n  }\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n  $result: \"\";\r\n  $has-groups: false;\r\n\r\n  // Getting initial snapshot and looking for groups\r\n  @each $expression in $expressions {\r\n    @if (str-length($result) != 0) {\r\n      $result: $result + \" and \";\r\n    }\r\n\r\n    @if (type-of($expression) == \"string\") {\r\n      $result: $result + $expression;\r\n    } @else if (type-of($expression) == \"list\") {\r\n      $result: $result + nth($expression, 1);\r\n      $has-groups: true;\r\n    } @else {\r\n      @warn '#{$expression} is not a valid expression.';\r\n    }\r\n  }\r\n\r\n  // If we have groups, we have to create all possible combinations\r\n  @if $has-groups {\r\n    @each $expression in $expressions {\r\n      @if (type-of($expression) == \"list\") {\r\n        $first: nth($expression, 1);\r\n\r\n        @each $member in $expression {\r\n          @if ($member != $first) {\r\n            @each $partial in $result {\r\n              $result: join(\r\n                $result,\r\n                str-replace-first($first, $member, $partial)\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n  $operator: \"\";\r\n  $value: \"\";\r\n  $element: \"\";\r\n  $result: \"\";\r\n  $is-width: true;\r\n\r\n  @if (type-of($expression) != \"string\") {\r\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n  }\r\n\r\n  // Separating the operator from the rest of the expression\r\n  @if (str-slice($expression, 2, 2) == \"=\") {\r\n    $operator: str-slice($expression, 1, 2);\r\n    $value: str-slice($expression, 3);\r\n  } @else {\r\n    $operator: str-slice($expression, 1, 1);\r\n    $value: str-slice($expression, 2);\r\n  }\r\n\r\n  // Checking what type of expression we're dealing with\r\n  @if map-has-key($breakpoints, $value) {\r\n    $result: map-get($breakpoints, $value);\r\n  } @else if map-has-key($media-expressions, $expression) {\r\n    $result: map-get($media-expressions, $expression);\r\n    $is-width: false;\r\n  } @else {\r\n    $result: to-number($value);\r\n  }\r\n\r\n  @if ($is-width) {\r\n    $unit: unit($result);\r\n    $interval: 0;\r\n\r\n    @if (map-has-key($unit-intervals, $unit)) {\r\n      $interval: map-get($unit-intervals, $unit);\r\n    } @else {\r\n      @warn 'Unknown unit: #{$unit}';\r\n    }\r\n\r\n    @if ($operator == \">\") {\r\n      $element: \"(min-width: #{$result + $interval})\";\r\n    } @else if ($operator == \"<\") {\r\n      $element: \"(max-width: #{$result - $interval})\";\r\n    } @else if ($operator == \">=\") {\r\n      $element: \"(min-width: #{$result})\";\r\n    } @else if ($operator == \"<=\") {\r\n      $element: \"(max-width: #{$result})\";\r\n    } @else {\r\n      @warn '#{$expression} is missing an operator.';\r\n    }\r\n  } @else {\r\n    $element: $result;\r\n  }\r\n\r\n  @return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n  $search-start: str-index($subject, $search);\r\n\r\n  @if $search-start == null {\r\n    @return $subject;\r\n  }\r\n\r\n  $result: str-slice($subject, 0, $search-start - 1);\r\n  $result: $result + $replace;\r\n  $result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    } @else if $character == \".\" {\r\n      $divider: 1;\r\n    } @else {\r\n      @if type-of($index) != \"number\" {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _length($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      } @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\r\n    \"vh\" \"vmin\" \"vmax\";\r\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\r\n  $index: index($strings, $unit);\r\n\r\n  @if type-of($index) != \"number\" {\r\n    @warn 'Unknown unit `#{$unit}`.';\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n",".more-projects {\r\n  margin-top: 2rem;\r\n  overflow: hidden;\r\n\r\n  .title {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    span {\r\n      display: inline-block;\r\n      width: 40px;\r\n      height: 2px;\r\n      background: $gold;\r\n    }\r\n\r\n    h2 {\r\n      margin-left: 8px;\r\n      display: inline-block;\r\n      color: $gold;\r\n    }\r\n  }\r\n\r\n  .carousel {\r\n    &:after {\r\n      content: \"flickity\";\r\n      display: none;\r\n    }\r\n\r\n    @include media(\"<=425px\") {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n\r\n      &:after {\r\n        content: \"\";\r\n      }\r\n    }\r\n\r\n    .project-card {\r\n      display: grid;\r\n      grid-template-columns: 300px;\r\n      grid-template-rows: 210px 170px 60px;\r\n      grid-template-areas: \"image\" \"profile\" \"links\";\r\n      border-radius: 18px;\r\n      text-align: center;\r\n      margin-right: 1.1rem;\r\n\r\n      @include media(\"<=425px\") {\r\n        grid-template-columns: 100%;\r\n        margin-right: 0;\r\n        margin-bottom: 2rem;\r\n      }\r\n\r\n      .project-image {\r\n        grid-area: image;\r\n\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          object-fit: cover;\r\n        }\r\n      }\r\n\r\n      .project-profile {\r\n        grid-area: profile;\r\n        padding: 25px;\r\n        background: $black;\r\n\r\n        h3 {\r\n          margin-top: 0;\r\n          font-size: 1.6rem;\r\n          color: $white;\r\n        }\r\n\r\n        p {\r\n          color: $gray;\r\n          font-size: 1rem;\r\n          font-weight: 300;\r\n        }\r\n      }\r\n\r\n      .project-links {\r\n        grid-area: links;\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-template-rows: 1fr;\r\n        background: $black;\r\n\r\n        .demo {\r\n          border-right: 1px dotted $white;\r\n        }\r\n\r\n        .demo,\r\n        .github {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          border-top: 1px dotted $white;\r\n\r\n          a {\r\n            color: $white;\r\n            font-size: 1.1rem;\r\n            text-decoration: none;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","footer {\r\n  margin-top: 4rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-top: 1px solid $gray;\r\n\r\n  @include media(\"<=530px\") {\r\n    flex-direction: column;\r\n  }\r\n\r\n  p {\r\n    font-size: 1rem;\r\n    color: $gray;\r\n    text-align: center;\r\n  }\r\n\r\n  .contact {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n\r\n    @include media(\"<=530px\") {\r\n      justify-content: center;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    @include media(\"<=350px\") {\r\n      flex-direction: column;\r\n      order: -1;\r\n      margin-top: 1rem;\r\n      margin-bottom: 0rem;\r\n    }\r\n\r\n    a {\r\n      color: $gold;\r\n      text-decoration: none;\r\n\r\n      &:nth-child(1) {\r\n        margin-right: 1.5rem;\r\n\r\n        @include media(\"<=350px\") {\r\n          margin-right: 0;\r\n          margin-bottom: 0.3rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",".overlay {\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: $black;\r\n  z-index: 4;\r\n}\r\n"]}